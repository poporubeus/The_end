import numpy as np
import matplotlib.pyplot as plt


### QUI METTO TUTTO INSIEME 
training_sets = np.array([6,10,20,30,40,50])
#plt.style.use('ggplot')
##########


### QCNN ANSATZ + WATERFALL FEATURE MAP RESULTS
train_acc6_fin_qcnn=[0.8333333333333334, 1.0, 1.0, 0.6666666666666666,  1.0]
test_acc6_fin_qcnn=[0.7785714285714286,0.6857142857142857,0.6857142857142857, 0.75,0.7214285714285714]
train_acc10_fin_qcnn=[0.6, 0.8, 0.9, 0.8, 0.7]
test_acc10_fin_qcnn=[0.5857142857142857,0.7285714285714285,0.6071428571428571, 0.6642857142857143,0.6857142857142857]
train_acc20_fin_qcnn=[0.9, 0.65, 0.7, 0.85, 0.7]
test_acc20_fin_qcnn=[0.7571428571428571,0.6214285714285714,0.6071428571428571,  0.6642857142857143,0.6142857142857143]
train_acc30_fin_qcnn=[0.8,0.4666666666666667, 0.7333333333333333,0.6666666666666666, 0.9333333333333333]
test_acc30_fin_qcnn=[0.6285714285714286,0.6714285714285714, 0.6285714285714286,0.5857142857142857,0.6642857142857143]
train_acc40_fin_qcnn=[0.775, 0.75, 0.85,  0.75,  0.725]
test_acc40_fin_qcnn=[0.7571428571428571,0.7857142857142857, 0.7,0.7714285714285715,0.7642857142857142]
train_acc50_fin_qcnn=[ 0.72,  0.66, 0.72,   0.8,  0.78]
test_acc50_fin_qcnn=[0.7357142857142858,0.6785714285714286, 0.7285714285714285, 0.7142857142857143,0.7642857142857142]

train_accf_QCNN = np.array([train_acc6_fin_qcnn, train_acc10_fin_qcnn, train_acc20_fin_qcnn, train_acc30_fin_qcnn, train_acc40_fin_qcnn, train_acc50_fin_qcnn])
test_accf_QCNN = np.array([test_acc6_fin_qcnn,test_acc10_fin_qcnn,test_acc20_fin_qcnn,test_acc30_fin_qcnn,test_acc40_fin_qcnn,test_acc50_fin_qcnn])

av_train_qcnn = [np.mean(sublist) for sublist in train_accf_QCNN]
std_train_qcnn = [np.std(sublist) for sublist in train_accf_QCNN]
av_test_qcnn = [np.mean(sublist) for sublist in test_accf_QCNN]
std_test_qcnn = [np.std(sublist) for sublist in test_accf_QCNN]

########

### WF ANSATZ (3 LAYERS) + WF FEATURE MAP RESULTS
tr_acc_fin_6 = [0.6666666666666666,1.0,0.833333333333333, 1.0,1.0]
test_acc_fin6 = [0.5714285714285714,0.5928571428571429,0.5714285714285714,0.7,0.7571428571428571]
train_acc10_fin=[0.7,0.9,0.9, 0.9,0.9]
test_acc10_fin=[0.6571428571428571,0.7071428571428572,0.7357142857142858,0.75,0.6285714285714286]
tracc20_fin = [0.5, 0.35,0.7,0.75,0.65]
testacc20_fin = [0.5857142857142857,0.38571428571428573,0.6285714285714286,0.7071428571428572,0.65]
train_acc30_fin=[0.6, 0.7333333333333333, 0.7, 0.7666666666666667,0.5666666666666667]
test_acc30_fin=[0.6214285714285714,0.7071428571428572,0.6714285714285714, 0.6714285714285714,0.7]
train_acc40_fin=[0.725,0.375, 0.7,0.825,0.725]
test_acc40_fin = [0.6857142857142857, 0.45714285714285713,0.75, 0.6714285714285714,0.6357142857142857]
traccuracy50_fin = [0.64,0.72,0.72,0.6,0.66]
testacc50_fin = [0.6142857142857143,0.6571428571428571,0.7214285714285714,0.6714285714285714,0.7571428571428571]

train_accf_wf3 = np.array([tr_acc_fin_6, train_acc10_fin, tracc20_fin, train_acc30_fin, train_acc40_fin, traccuracy50_fin])
test_accf_wf3 = np.array([test_acc_fin6,test_acc10_fin,testacc20_fin,test_acc30_fin,test_acc40_fin,testacc50_fin])

av_train_wf3 = [np.mean(sublist) for sublist in train_accf_wf3]
std_train_wf3 = [np.std(sublist) for sublist in train_accf_wf3]
av_test_wf3 = [np.mean(sublist) for sublist in test_accf_wf3]
std_test_wf3 = [np.std(sublist) for sublist in test_accf_wf3]

#########

## RL1

train_acc6_fin_RL1=[1.0,0.8333333333333334,1.0,0.5,1.0]
test_acc6_fin_RL1=[0.6642857142857143,0.5714285714285714,0.6,0.6357142857142857,0.4928571428571429]
train_acc10_fin_RL1=[0.4,0.7,0.9,0.8,0.9]
test_acc10_fin_RL1=[0.5285714285714286, 0.38571428571428573, 0.5857142857142857,0.6285714285714286,0.7214285714285714]
train_acc20_fin_RL1=[0.9,0.75,0.85,0.75,0.85]
test_acc20_fin_RL1=[0.6785714285714286, 0.7357142857142858, 0.6285714285714286,0.65,0.7214285714285714]
train_acc30_fin_RL1=[0.8666666666666667,0.8,0.8, 0.7333333333333333,0.8]
test_acc30_fin_RL1=[0.6928571428571428, 0.7071428571428572, 0.75,0.6142857142857143,0.75]
train_acc40_fin_RL1=[0.575,0.5,0.55, 0.7,0.65]
test_acc40_fin_RL1=[0.4857142857142857, 0.4714285714285714, 0.5214285714285715,0.5714285714285714,0.55]
train_acc50_fin_RL1=[0.42,0.78,0.78, 0.78,0.82]
test_acc50_fin_RL1=[ 0.4714285714285714, 0.7, 0.7857142857142857, 0.7571428571428571,0.75]

train_accf_RL1 = np.array([train_acc6_fin_RL1, train_acc10_fin_RL1, train_acc20_fin_RL1, train_acc30_fin_RL1, train_acc40_fin_RL1, train_acc50_fin_RL1])
test_accf_RL1 = np.array([test_acc6_fin_RL1, test_acc10_fin_RL1, test_acc20_fin_RL1, test_acc30_fin_RL1, test_acc40_fin_RL1, test_acc50_fin_RL1])

av_train_RL1 = [np.mean(sublist) for sublist in train_accf_RL1]
std_train_RL1 = [np.std(sublist) for sublist in train_accf_RL1]
av_test_RL1 = [np.mean(sublist) for sublist in test_accf_RL1]
std_test_RL1 = [np.std(sublist) for sublist in test_accf_RL1]

#########

### RL2

train_acc6_fin_R2L=[1.0,1.0,1.0,0.5,1.0]
test_acc6_fin_R2L=[0.6785714285714286, 0.7142857142857143,0.6785714285714286,0.5, 0.5142857142857142]
train_acc10_fin_R2L=[1.0,1.0,0.9,0.9,1.0]
test_acc10_fin_R2L=[0.6785714285714286, 0.7214285714285714,0.45,0.6714285714285714, 0.7142857142857143]
train_acc20_fin_R2L=[0.9,0.8,0.65,0.95,0.9]
test_acc20_fin_R2L=[0.6642857142857143, 0.75,0.6071428571428571, 0.7428571428571429, 0.8]
train_acc30_fin_R2L=[0.8666666666666667,0.9, 0.8666666666666667,0.7666666666666667,0.7]
test_acc30_fin_R2L=[0.7571428571428571, 0.75, 0.7285714285714285, 0.7, 0.6214285714285714]
train_acc40_fin_R2L=[0.8,0.825, 0.8,0.9,0.8]
test_acc40_fin_R2L=[0.7285714285714285,0.7785714285714286, 0.7428571428571429, 0.6714285714285714, 0.7428571428571429]
train_acc50_fin_R2L=[ 0.88,0.86, 0.9,0.8,0.84]
test_acc50_fin_R2L=[0.7428571428571429, 0.7642857142857142, 0.7785714285714286, 0.7571428571428571,  0.75]

train_accf_RL2 = np.array([train_acc6_fin_R2L, train_acc10_fin_R2L, train_acc20_fin_R2L, train_acc30_fin_R2L, train_acc40_fin_R2L, train_acc50_fin_R2L])
test_accf_RL2 = np.array([test_acc6_fin_R2L, test_acc10_fin_R2L, test_acc20_fin_R2L, test_acc30_fin_R2L, test_acc40_fin_R2L, test_acc50_fin_R2L])

av_train_RL2 = [np.mean(sublist) for sublist in train_accf_RL2]
std_train_RL2 = [np.std(sublist) for sublist in train_accf_RL2]
av_test_RL2 = [np.mean(sublist) for sublist in test_accf_RL2]
std_test_RL2 = [np.std(sublist) for sublist in test_accf_RL2]

#########

### RL3

train_acc6_fin_RL3=[1.0,1.0,0.8333333333333334, 1.0,1.0]
test_acc6_fin_RL3=[ 0.7,  0.6642857142857143, 0.7785714285714286,  0.7071428571428572, 0.6714285714285714]
train_acc10_fin_RL3=[1.0,1.0,1.0, 1.0,1.0]
test_acc10_fin_RL3=[ 0.6, 0.6857142857142857,0.6714285714285714, 0.7642857142857142, 0.7142857142857143]
train_acc20_fin_RL3=[0.75,1.0,1.0, 1.0,1.0]
test_acc20_fin_RL3=[0.6928571428571428, 0.7357142857142858,0.7214285714285714, 0.7285714285714285,  0.7714285714285715]
train_acc30_fin_RL3=[0.9333333333333333,0.9333333333333333,1.0, 0.9,0.8666666666666667]
test_acc30_fin_RL3=[ 0.7142857142857143, 0.7214285714285714,0.7142857142857143, 0.7428571428571429,  0.7357142857142858]
train_acc40_fin_RL3=[0.925,0.875,0.675, 0.825,0.9]
test_acc40_fin_RL3=[0.8285714285714286, 0.7642857142857142,0.6357142857142857,  0.7857142857142857, 0.7642857142857142]
train_acc50_fin_RL3=[0.84, 0.9, 0.92, 0.92,0.88]
test_acc50_fin_RL3=[0.7285714285714285, 0.7714285714285715, 0.7642857142857142,  0.7928571428571428,  0.8285714285714286]

train_accf_RL3 = np.array([train_acc6_fin_RL3, train_acc10_fin_RL3, train_acc20_fin_RL3, train_acc30_fin_RL3, train_acc40_fin_RL3, train_acc50_fin_RL3])
test_accf_RL3 = np.array([test_acc6_fin_RL3, test_acc10_fin_RL3, test_acc20_fin_RL3, test_acc30_fin_RL3, test_acc40_fin_RL3, test_acc50_fin_RL3])

av_train_RL3 = [np.mean(sublist) for sublist in train_accf_RL3]
std_train_RL3 = [np.std(sublist) for sublist in train_accf_RL3]
av_test_RL3 = [np.mean(sublist) for sublist in test_accf_RL3]
std_test_RL3 = [np.std(sublist) for sublist in test_accf_RL3]


plt.plot(training_sets, av_test_qcnn, marker='o', label='QCNN', fillstyle='none', linestyle='none')
plt.plot(training_sets, av_test_RL1,  marker='o',   label='RL1',fillstyle='none',linestyle='none')
plt.plot(training_sets, av_test_RL2,  marker='o',   label='RL2',fillstyle='none',linestyle='none')
plt.plot(training_sets, av_test_RL3,  marker='o',  label='RL3',fillstyle='none',linestyle='none')
plt.plot(training_sets, av_test_wf3,  marker='o', label='WF3',fillstyle='none',markerfacecolor='none',linestyle='none')
plt.legend(loc='best')
plt.xlabel('Training set')
plt.ylabel('Test accuracy')
plt.ylim(0,1.05)
plt.title('Test accuracy comparison')
plt.savefig('/Users/francescoaldoventurelli/Desktop/test_acc_COMPARISON.jpg', dpi=800)
plt.show()


plt.plot(training_sets, av_train_qcnn,  marker='s',   label='QCNN',fillstyle='none', ls=':')
plt.plot(training_sets, av_train_RL1,  marker='s',  label='RL1',fillstyle='none', ls=':')
plt.plot(training_sets, av_train_RL2,  marker='s',   label='RL2',fillstyle='none', ls=':')
plt.plot(training_sets, av_train_RL3, marker='s',  label='RL3',fillstyle='none', ls=':')
plt.plot(training_sets, av_train_wf3,  marker='s', label='WF3',fillstyle='none', ls=':')
plt.legend(loc='best')
plt.xlabel('Training set')
plt.ylabel('Train accuracy')
plt.ylim(0,1.05)
plt.title('Train accuracy comparison')
plt.savefig('/Users/francescoaldoventurelli/Desktop/Train_acc_COMPARISON.jpg', dpi=800)
plt.show()


#####
# Waterfall model WFWF w 2 layers MNIST

# 6 immagini
losswfwf_6_1 = [4.610786437988281, 4.600181579589844, 4.637253761291504, 4.635880947113037, 4.637890815734863, 4.604610443115234, 4.234104633331299, 4.120380878448486, 3.745496988296509, 3.752155303955078, 3.77559232711792, 3.746664524078369, 3.7213988304138184, 3.8085362911224365, 3.766510486602783, 3.7230331897735596, 3.731245517730713, 3.7116763591766357, 3.666538715362549, 3.6635866165161133]
tr_accwfwf_6_1 = [0.5, 0.5, 0.5, 0.5, 0.5, 0.3333333333333333, 0.5, 0.5, 0.8333333333333334, 0.8333333333333334, 0.8333333333333334, 0.8333333333333334, 0.8333333333333334, 0.8333333333333334, 0.8333333333333334, 0.8333333333333334, 0.8333333333333334, 0.6666666666666666, 0.6666666666666666, 0.8333333333333334]
losswfwf_6_2 = [3.8657732009887695, 3.866591215133667, 3.8849666118621826, 4.248390197753906, 4.102435111999512, 4.1112060546875, 4.072875499725342, 4.066992282867432, 4.023034572601318, 3.957458972930908, 3.937626838684082, 3.8632969856262207, 3.87199068069458, 3.8342106342315674, 3.852837085723877, 3.8412322998046875, 3.813486099243164, 3.7411770820617676, 3.6783816814422607, 3.7042696475982666]
tr_accwfwf_6_2 = [0.6666666666666666, 0.8333333333333334, 0.6666666666666666, 0.3333333333333333, 0.8333333333333334, 0.8333333333333334, 0.8333333333333334, 0.6666666666666666, 0.6666666666666666, 0.6666666666666666, 0.6666666666666666, 0.6666666666666666, 0.6666666666666666, 0.6666666666666666, 0.6666666666666666, 0.6666666666666666, 0.6666666666666666, 0.6666666666666666, 0.6666666666666666, 0.6666666666666666]
losswfwf_6_3 = [4.041107654571533, 4.041274070739746, 4.040800094604492, 4.055968761444092, 4.014132499694824, 4.007888317108154, 4.062203407287598, 3.9758856296539307, 4.076221466064453, 4.039149761199951, 3.9997007846832275, 3.984828472137451, 3.983503580093384, 3.977498769760132, 3.990276336669922, 4.03466796875, 3.814228057861328, 3.7912919521331787, 3.71895170211792, 3.831397533416748]
tr_accwfwf_6_3 = [0.6666666666666666, 0.8333333333333334, 0.8333333333333334, 0.5, 0.6666666666666666, 0.6666666666666666, 0.8333333333333334, 0.6666666666666666, 0.6666666666666666, 0.6666666666666666, 0.6666666666666666, 0.8333333333333334, 0.6666666666666666, 0.6666666666666666, 0.6666666666666666, 0.8333333333333334, 1.0, 0.8333333333333334, 0.8333333333333334, 0.6666666666666666]
losswfwf_6_4 = [3.922055244445801, 3.9652233123779297, 3.9693448543548584, 3.9006779193878174, 3.922220468521118, 3.9209301471710205, 3.905989170074463, 3.935366153717041, 3.966820240020752, 3.9283852577209473, 3.9396421909332275, 3.9452550411224365, 3.9423508644104004, 3.9344253540039062, 3.9899284839630127, 4.000533103942871, 4.0068678855896, 4.100472927093506, 4.105347633361816, 4.086875915527344]
tr_accwfwf_6_4 = [0.6666666666666666, 0.6666666666666666, 0.6666666666666666, 0.8333333333333334, 0.8333333333333334, 0.8333333333333334, 0.8333333333333334, 0.6666666666666666, 0.8333333333333334, 0.6666666666666666, 0.6666666666666666, 0.6666666666666666, 0.6666666666666666, 0.6666666666666666, 0.8333333333333334, 0.6666666666666666, 0.6666666666666666, 0.5, 0.5, 0.5]
losswfwf_6_5 = [3.881600856781006, 3.8523101806640625, 3.8369429111480713, 3.5834097862243652, 3.6513445377349854, 3.6537108421325684, 3.6378464698791504, 3.6167025566101074, 3.663750648498535, 3.5681283473968506, 3.565918445587158, 3.55712628364563, 3.554164409637451, 3.5296630859375, 3.512258529663086, 3.5060267448425293, 3.5118823051452637, 3.5007240772247314, 3.499678373336792, 3.5137124061584473]
tr_accwfwf_6_5 =  [0.6666666666666666, 0.8333333333333334, 0.8333333333333334, 0.8333333333333334, 0.8333333333333334, 0.8333333333333334, 1.0, 0.8333333333333334, 0.8333333333333334, 0.8333333333333334, 0.8333333333333334, 0.8333333333333334, 0.8333333333333334, 0.8333333333333334, 0.8333333333333334, 0.8333333333333334, 0.8333333333333334, 1.0, 1.0, 1.0]

tr_acc_fin_wfwf_6 = [0.8333333333333334,0.6666666666666666,0.6666666666666666,0.6666666666666666,1.0]
test_acc_wfwf_6 = [0.6785714285714286,0.75,0.6642857142857143,0.6714285714285714,0.6714285714285714]

# 10 immagini
losswfwf_10_1 = [7.732809066772461, 7.7846245765686035, 7.782736778259277, 7.787395477294922, 7.756842136383057, 7.8924641609191895, 7.96550178527832, 8.003541946411133, 7.826888561248779, 7.643295764923096, 7.645674705505371, 7.539005756378174, 7.532801151275635, 7.509061336517334, 7.197826385498047, 7.030638694763184, 6.893367767333984, 6.934711456298828, 7.01638650894165, 6.890392780303955]
tr_accwfwf_10_1 = [0.4, 0.4, 0.4, 0.4, 0.3, 0.4, 0.3, 0.2, 0.3, 0.3, 0.3, 0.3, 0.4, 0.4, 0.5, 0.6, 0.6, 0.5, 0.4, 0.6]
losswfwf_10_2 = [7.4730224609375, 7.409948348999023, 7.372380256652832, 7.299245357513428, 7.048421382904053, 7.14945125579834, 7.1375322341918945, 7.081881999969482, 7.1333909034729, 6.984184741973877, 6.718031883239746, 6.417843341827393, 6.416527271270752, 6.427239418029785, 6.375500202178955, 6.236133098602295, 6.321930408477783, 6.239221096038818, 6.220896244049072, 6.190556526184082]
tr_accwfwf_10_2 = [0.2, 0.2, 0.3, 0.4, 0.5, 0.4, 0.4, 0.3, 0.5, 0.5, 0.6, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7]
losswfwf_10_3 = [6.613420486450195, 6.583905220031738, 6.513857364654541, 6.5001912117004395, 6.495840549468994, 6.350212574005127, 6.370213031768799, 6.369570732116699, 6.360976219177246, 6.389652729034424, 6.454136371612549, 6.450618267059326, 6.485681533813477, 6.495794296264648, 6.442254066467285, 6.4534735679626465, 6.444760799407959, 6.440837383270264, 6.314801216125488, 6.387886047363281]
tr_accwfwf_10_3 = [0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.8, 0.7, 0.8, 0.8, 0.7, 0.8, 0.7, 0.6, 0.7, 0.6, 0.7, 0.8, 1.0, 0.9]
losswfwf_10_4 = [6.650477886199951, 6.640885829925537, 6.635964393615723, 6.5865702629089355, 6.470937728881836, 6.341217517852783, 6.370140075683594, 6.414549350738525, 6.392324924468994, 6.358025074005127, 6.318511009216309, 6.2283453941345215, 6.2367753982543945, 6.709134101867676, 6.596644401550293, 6.584980487823486, 6.514787673950195, 6.654135227203369, 6.655416965484619, 6.562953472137451]
tr_accwfwf_10_4 = [0.8, 0.8, 0.7, 0.8, 0.8, 0.9, 0.8, 0.7, 0.8, 0.8, 0.8, 0.9, 0.9, 0.4, 0.8, 0.8, 0.8, 0.6, 0.6, 0.7]
losswfwf_10_5 = [6.619839191436768, 6.666821479797363, 6.530472755432129, 6.467197895050049, 6.463026523590088, 6.417422771453857, 6.435117244720459, 6.4289374351501465, 6.434602737426758, 6.44670295715332, 6.452686309814453, 6.431820869445801, 6.416800022125244, 7.126812934875488, 7.084590911865234, 6.7815704345703125, 6.401642799377441, 6.4084696769714355, 6.3514838218688965, 6.362644195556641]
tr_accwfwf_10_5 = [0.6, 0.6, 0.6, 0.6, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.4, 0.4, 0.6, 0.8, 0.7, 0.9, 0.8]

tr_acc_fin_wfwf_10 = [0.6,0.7,0.8,0.6,0.8]
test_acc_wfwf_10 = [0.34285714285714286,0.6714285714285714,0.75,0.6571428571428571,0.6928571428571428]

#20 immagini
losswfwf_20_1 = [15.718900680541992, 15.810482025146484, 15.808415412902832, 15.449142456054688, 14.707267761230469, 14.082265853881836, 13.717737197875977, 13.710579872131348, 13.619255065917969, 13.491806030273438, 13.402093887329102, 13.365257263183594, 13.352739334106445, 13.135848999023438, 13.172364234924316, 13.23586654663086, 13.089789390563965, 13.154784202575684, 13.085613250732422, 13.026577949523926]
tr_accwfwf_20_1 = [0.25, 0.25, 0.25, 0.3, 0.3, 0.4, 0.45, 0.5, 0.55, 0.65, 0.75, 0.65, 0.65, 0.7, 0.65, 0.6, 0.65, 0.65, 0.65, 0.65]
losswfwf_20_2 = [13.27708625793457, 13.228460311889648, 13.205155372619629, 13.148679733276367, 13.095816612243652, 13.0331449508667, 13.346986770629883, 13.272773742675781, 13.266118049621582, 13.162014961242676, 13.052633285522461, 12.91230297088623, 12.960341453552246, 12.846901893615723, 12.894923210144043, 12.921243667602539, 12.952881813049316, 12.845492362976074, 12.889082908630371, 12.871488571166992]
tr_accwfwf_20_2 = [0.65, 0.65, 0.75, 0.7, 0.7, 0.75, 0.55, 0.65, 0.65, 0.7, 0.75, 0.75, 0.7, 0.7, 0.7, 0.75, 0.7, 0.75, 0.75, 0.7]
losswfwf_20_3 = [13.769962310791016, 13.735380172729492, 13.818620681762695, 13.753121376037598, 13.713105201721191, 13.722869873046875, 13.735943794250488, 13.769006729125977, 13.680913925170898, 13.701127052307129, 13.712300300598145, 13.61257266998291, 13.62105655670166, 13.630160331726074, 13.583253860473633, 13.563448905944824, 13.569721221923828, 13.590215682983398, 13.601081848144531, 13.960393905639648]
tr_accwfwf_20_3 = [0.5, 0.5, 0.55, 0.5, 0.6, 0.6, 0.65, 0.55, 0.55, 0.55, 0.55, 0.65, 0.5, 0.6, 0.6, 0.55, 0.65, 0.65, 0.65, 0.5]
losswfwf_20_4 = [13.501197814941406, 13.477548599243164, 13.50108528137207, 13.476099014282227, 13.313077926635742, 13.234528541564941, 13.130918502807617, 13.029078483581543, 13.070783615112305, 13.115104675292969, 13.145002365112305, 13.214269638061523, 13.200929641723633, 13.122243881225586, 13.206681251525879, 13.099470138549805, 13.10348892211914, 13.098257064819336, 13.084356307983398, 13.14330768585205]
tr_accwfwf_20_4 = [0.7, 0.65, 0.65, 0.65, 0.65, 0.7, 0.8, 0.8, 0.75, 0.75, 0.75, 0.65, 0.75, 0.75, 0.7, 0.8, 0.7, 0.7, 0.75, 0.75]
losswfwf_20_5 = [13.077133178710938, 13.142946243286133, 13.134759902954102, 13.087650299072266, 12.983114242553711, 12.948143005371094, 12.896858215332031, 12.907567024230957, 12.748580932617188, 12.703839302062988, 12.724006652832031, 12.939160346984863, 12.903071403503418, 12.918829917907715, 12.832000732421875, 12.750399589538574, 12.785001754760742, 12.831086158752441, 12.83333969116211, 12.7952299118042]
tr_accwfwf_20_5 = [0.7, 0.65, 0.65, 0.65, 0.75, 0.75, 0.75, 0.7, 0.8, 0.85, 0.9, 0.7, 0.75, 0.7, 0.8, 0.8, 0.8, 0.8, 0.75, 0.75]

tr_acc_fin_wfwf_20 = [0.7,0.7,0.7,0.7,0.8]
test_acc_wfwf_20 = [0.5928571428571429,0.6571428571428571,0.5357142857142857,0.6642857142857143,0.6857142857142857]

#30 immagini
losswfwf_30_1 = [23.368146896362305, 23.403749465942383, 23.42675018310547, 23.474882125854492, 23.656639099121094, 23.54893684387207, 23.271015167236328, 22.81317138671875, 22.352968215942383, 21.628883361816406, 20.128448486328125, 20.161941528320312, 20.024715423583984, 19.916166305541992, 19.980161666870117, 20.06097984313965, 20.050411224365234, 19.976696014404297, 19.990461349487305, 19.737958908081055]
tr_accwfwf_30_1 = [0.3333333333333333, 0.3333333333333333, 0.4, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 0.26666666666666666, 0.36666666666666664, 0.3333333333333333, 0.26666666666666666, 0.6666666666666666, 0.6333333333333333, 0.6, 0.6666666666666666, 0.6333333333333333, 0.6333333333333333, 0.6666666666666666, 0.7, 0.7, 0.6666666666666666]
losswfwf_30_2 = [20.230043411254883, 20.183748245239258, 20.128782272338867, 20.064149856567383, 20.022113800048828, 20.03527069091797, 19.747703552246094, 19.838245391845703, 19.636274337768555, 19.341392517089844, 19.431856155395508, 19.646278381347656, 19.64934539794922, 19.497953414916992, 19.43092918395996, 19.26350212097168, 19.22122573852539, 19.265962600708008, 19.281404495239258, 19.29717445373535]
tr_accwfwf_30_2 = [0.6333333333333333, 0.6333333333333333, 0.6666666666666666, 0.6333333333333333, 0.7, 0.6666666666666666, 0.7666666666666667, 0.6333333333333333, 0.6666666666666666, 0.8666666666666667, 0.8, 0.7333333333333333, 0.7333333333333333, 0.8, 0.8, 0.8, 0.7666666666666667, 0.8, 0.8, 0.7666666666666667]
losswfwf_30_3 = [20.683130264282227, 20.596906661987305, 20.663490295410156, 20.473224639892578, 20.355571746826172, 20.30113410949707, 20.190839767456055, 20.1195011138916, 20.184431076049805, 20.170804977416992, 20.14805030822754, 20.062116622924805, 20.156545639038086, 20.110273361206055, 20.12574577331543, 20.036956787109375, 20.02686309814453, 19.95964813232422, 20.042434692382812, 19.87759780883789]
tr_accwfwf_30_3 = [0.5, 0.5666666666666667, 0.5, 0.6, 0.6333333333333333, 0.6, 0.6, 0.6333333333333333, 0.5666666666666667, 0.5666666666666667, 0.5666666666666667, 0.5666666666666667, 0.5666666666666667, 0.5333333333333333, 0.6, 0.6, 0.6, 0.6, 0.6666666666666666, 0.7]
losswfwf_30_4 = [19.127941131591797, 19.076454162597656, 18.921283721923828, 18.95636558532715, 18.950471878051758, 18.92060089111328, 18.932188034057617, 19.232330322265625, 19.19767189025879, 19.17007827758789, 19.19037437438965, 18.920869827270508, 18.935361862182617, 18.859825134277344, 18.86654281616211, 20.938844680786133, 20.795394897460938, 20.552886962890625, 20.583446502685547, 20.10248374938965]
tr_accwfwf_30_4 = [0.7666666666666667, 0.8, 0.9, 0.8333333333333334, 0.8666666666666667, 0.8666666666666667, 0.9, 0.8, 0.8333333333333334, 0.7666666666666667, 0.8666666666666667, 0.9, 0.9, 0.9, 0.8666666666666667, 0.5333333333333333, 0.6666666666666666, 0.6333333333333333, 0.6333333333333333, 0.7333333333333333]
losswfwf_30_5 = [19.892602920532227, 19.8990535736084, 21.652748107910156, 19.705280303955078, 21.614103317260742, 20.21158218383789, 20.248491287231445, 20.232383728027344, 20.17227554321289, 19.779659271240234, 19.60491371154785, 19.43459701538086, 19.599782943725586, 19.656845092773438, 19.365942001342773, 19.18100357055664, 19.124061584472656, 19.084604263305664, 19.139333724975586, 19.20237922668457]
tr_accwfwf_30_5 = [0.6, 0.5666666666666667, 0.3333333333333333, 0.7, 0.36666666666666664, 0.5666666666666667, 0.6333333333333333, 0.5666666666666667, 0.6, 0.6333333333333333, 0.6666666666666666, 0.7, 0.7, 0.7333333333333333, 0.7666666666666667, 0.7333333333333333, 0.8, 0.8333333333333334, 0.8333333333333334, 0.7666666666666667]

tr_acc_fin_wfwf_30 = [0.7333333333333333,0.7666666666666667,0.7,0.7666666666666667,0.8]
test_acc_wfwf_30 = [0.6714285714285714,0.65,0.6214285714285714,0.6642857142857143,0.65]

#40 immagini
losswfwf_40_1 = [31.02330207824707, 31.076208114624023, 30.914567947387695, 31.108068466186523, 31.007671356201172, 31.10373306274414, 31.1536865234375, 30.93318748474121, 30.7955379486084, 30.263578414916992, 29.657936096191406, 28.579965591430664, 27.976253509521484, 27.94853401184082, 27.896718978881836, 27.947649002075195, 27.932537078857422, 27.626625061035156, 27.654516220092773, 27.35352897644043]
tr_accwfwf_40_1 =  [0.375, 0.375, 0.375, 0.35, 0.325, 0.325, 0.35, 0.3, 0.3, 0.35, 0.35, 0.325, 0.4, 0.45, 0.5, 0.425, 0.425, 0.475, 0.5, 0.625]
losswfwf_40_2 = [27.7015380859375, 27.695213317871094, 27.392087936401367, 27.277917861938477, 26.67477798461914, 26.042694091796875, 25.848119735717773, 25.593059539794922, 25.348125457763672, 25.24408531188965, 25.140796661376953, 25.078113555908203, 25.108308792114258, 25.107797622680664, 25.112567901611328, 25.040822982788086, 25.123929977416992, 25.01882553100586, 25.020519256591797, 24.963626861572266]
tr_accwfwf_40_2 =  [0.5, 0.525, 0.525, 0.625, 0.7, 0.775, 0.75, 0.8, 0.775, 0.8, 0.825, 0.825, 0.8, 0.8, 0.775, 0.825, 0.825, 0.775, 0.8, 0.825]
losswfwf_40_3 = [26.892414093017578, 26.9316463470459, 26.858121871948242, 26.750926971435547, 26.724224090576172, 26.805721282958984, 26.779775619506836, 26.820659637451172, 26.83622169494629, 26.836135864257812, 26.787574768066406, 26.707962036132812, 26.69999122619629, 26.74666976928711, 26.590576171875, 26.67701530456543, 26.76051902770996, 26.443252563476562, 26.46988296508789, 26.593929290771484]
tr_accwfwf_40_3 = [0.6, 0.6, 0.6, 0.65, 0.65, 0.675, 0.675, 0.675, 0.65, 0.65, 0.625, 0.65, 0.65, 0.65, 0.625, 0.65, 0.65, 0.675, 0.75, 0.75]
losswfwf_40_4 = [25.998779296875, 25.959457397460938, 25.719358444213867, 25.49123191833496, 25.332988739013672, 25.30305290222168, 25.302974700927734, 25.129207611083984, 25.2227783203125, 25.088659286499023, 24.909648895263672, 24.87044906616211, 24.82868003845215, 25.009899139404297, 25.011777877807617, 25.016611099243164, 25.15033721923828, 25.093597412109375, 25.02014923095703, 24.994335174560547]
tr_accwfwf_40_4 = [0.725, 0.7, 0.725, 0.7, 0.7, 0.825, 0.8, 0.875, 0.775, 0.825, 0.825, 0.825, 0.875, 0.875, 0.85, 0.875, 0.875, 0.875, 0.9, 0.85]
losswfwf_40_5 = [26.131635665893555, 26.22551155090332, 26.129934310913086, 25.914426803588867, 26.02272605895996, 26.126768112182617, 25.835365295410156, 25.755313873291016, 25.662195205688477, 25.5594539642334, 25.513710021972656, 25.519521713256836, 25.434118270874023, 25.528085708618164, 25.534120559692383, 25.523296356201172, 25.557861328125, 25.734886169433594, 25.770671844482422, 25.677183151245117]
tr_accwfwf_40_5 = [0.65, 0.65, 0.65, 0.7, 0.725, 0.675, 0.675, 0.75, 0.75, 0.75, 0.75, 0.75, 0.725, 0.725, 0.7, 0.7, 0.7, 0.725, 0.7, 0.7]

tr_acc_fin_wfwf_40 = [0.675,0.8,0.725,0.9,0.725]
test_acc_wfwf_40 = [0.5,0.65,0.6142857142857143,0.7214285714285714,0.65]

#50 immagini
losswfwf_50_1 = [38.64067077636719, 38.62972640991211, 38.59162139892578, 38.6983757019043, 36.98262023925781, 35.013916015625, 34.7335205078125, 34.665367126464844, 34.025264739990234, 32.9100227355957, 32.658329010009766, 32.58531951904297, 32.16938781738281, 32.18927001953125, 32.34486389160156, 32.23046875, 32.41587829589844, 32.452880859375, 32.541168212890625, 32.52572250366211]
tr_accwfwf_50_1 =  [0.36, 0.36, 0.36, 0.34, 0.32, 0.44, 0.52, 0.48, 0.62, 0.66, 0.66, 0.7, 0.7, 0.7, 0.64, 0.7, 0.66, 0.62, 0.64, 0.64]
losswfwf_50_2 = [32.66140365600586, 32.7238883972168, 32.58035659790039, 32.351043701171875, 32.38971710205078, 32.31319808959961, 32.37968826293945, 32.30564880371094, 32.38162612915039, 32.22303009033203, 32.23823547363281, 32.21567153930664, 32.02326202392578, 32.050880432128906, 32.10422134399414, 32.16118240356445, 32.080421447753906, 32.09315490722656, 32.07722854614258, 32.042755126953125]
tr_accwfwf_50_2 =  [0.68, 0.66, 0.72, 0.72, 0.76, 0.74, 0.76, 0.72, 0.74, 0.76, 0.76, 0.76, 0.74, 0.74, 0.78, 0.76, 0.76, 0.76, 0.74, 0.72]
losswfwf_50_3 = [33.064205169677734, 33.006629943847656, 32.89302062988281, 32.92966079711914, 32.78255844116211, 32.58083724975586, 32.53369903564453, 32.5704231262207, 32.468814849853516, 32.501564025878906, 32.5203742980957, 32.466182708740234, 32.468223571777344, 32.55610656738281, 32.55131530761719, 32.62334442138672, 32.53723907470703, 32.63779830932617, 32.748844146728516, 32.23352813720703]
tr_accwfwf_50_3 = [0.6, 0.6, 0.6, 0.65, 0.65, 0.675, 0.675, 0.675, 0.65, 0.65, 0.625, 0.65, 0.65, 0.65, 0.625, 0.65, 0.65, 0.675, 0.75, 0.75]
losswfwf_50_4 = [32.716617584228516, 32.67216110229492, 32.3564567565918, 32.04441452026367, 31.917879104614258, 31.914188385009766, 31.968347549438477, 31.870668411254883, 31.764785766601562, 31.91502571105957, 31.856645584106445, 31.874723434448242, 31.94189453125, 32.03179168701172, 32.103939056396484, 32.15580368041992, 33.198917388916016, 33.19696807861328, 32.14683151245117, 32.16290283203125]
tr_accwfwf_50_4 =  [0.7, 0.7, 0.64, 0.68, 0.78, 0.74, 0.7, 0.76, 0.78, 0.8, 0.78, 0.8, 0.76, 0.76, 0.8, 0.8, 0.66, 0.68, 0.78, 0.84]
losswfwf_50_5 = [32.771610260009766, 32.633201599121094, 32.683067321777344, 32.53519821166992, 32.48487854003906, 32.35539627075195, 32.33237838745117, 32.26072692871094, 32.20429611206055, 32.07583236694336, 32.1282958984375, 32.0903434753418, 32.15538787841797, 32.09627914428711, 32.1141471862793, 32.18272399902344, 32.185760498046875, 32.16592788696289, 32.19149398803711, 32.217254638671875]
tr_accwfwf_50_5 = [0.68, 0.64, 0.66, 0.68, 0.64, 0.66, 0.72, 0.68, 0.68, 0.7, 0.7, 0.72, 0.7, 0.72, 0.68, 0.74, 0.74, 0.72, 0.72, 0.74]

tr_acc_fin_wfwf_50 = [0.7,0.78,0.78,0.82,0.74]
test_acc_wfwf_50 = [0.65,0.6357142857142857, 0.6714285714285714,0.7214285714285714,0.6785714285714286]


train_accf_wfwf_2L = np.array([tr_acc_fin_wfwf_6, tr_acc_fin_wfwf_10, tr_acc_fin_wfwf_20, tr_acc_fin_wfwf_30, tr_acc_fin_wfwf_40, tr_acc_fin_wfwf_50])
test_accf_wfwf_2L = np.array([test_acc_wfwf_6,test_acc_wfwf_10,test_acc_wfwf_20,test_acc_wfwf_30,test_acc_wfwf_40,test_acc_wfwf_50])

av_train_wfwf_2L = [np.mean(sublist) for sublist in train_accf_wfwf_2L]
std_train_wfwf_2L = [np.std(sublist) for sublist in train_accf_wfwf_2L]
av_test_wfwf_2L = [np.mean(sublist) for sublist in test_accf_wfwf_2L]
std_test_wfwf_2L = [np.std(sublist) for sublist in test_accf_wfwf_2L]

x = np.array([6,10,20,30,40,50])

plt.errorbar(x, av_train_wfwf_2L,yerr=std_train_wfwf_2L,marker='o',markersize=10, fillstyle='none', label='Train acc.', barsabove=True, capsize=4,capthick=1,color='tab:blue',ls=':')
plt.errorbar(x, av_test_wfwf_2L, yerr=std_test_wfwf_2L,marker='s', markersize=10,fillstyle='none',label='Test acc.',barsabove=True, capsize=4,capthick=1,color='tab:orange',ls=':')

plt.title("WFWF2",fontsize = 12, fontweight='semibold')
plt.xlabel('Training set',fontsize = 12, fontweight='semibold')
plt.ylabel('Value',fontsize = 12, fontweight='semibold')
plt.legend(loc=4,prop={'size': 16})
plt.xticks(training_sets)
yticks = np.linspace(0,1,11)
plt.yticks(yticks)
plt.savefig('/Users/francescoaldoventurelli/Desktop/WFWF_2layers.jpg', dpi=800)
plt.show()


'''list1, list2 = (list(t) for t in zip(*sorted(zip(tr_acc_fin_wfwf_40, test_acc_wfwf_40))))
print("Train sorted:", list1)
print("Test sorted:", list2)

plt.plot(list1, list2, marker='o', markersize=9, fillstyle='none')
plt.xlabel("Train acc.")
plt.ylabel("Test acc.")
plt.show()'''


def train_error(train_acc):
    tr_acc = np.asarray(train_acc)
    tr_error = np.zeros(len(train_acc))
    for i in range(len(train_acc)):
        tr_error[i]=1.0-tr_acc[i]
    return tr_error

def test_error(test_acc):
    test_acc = np.asarray(test_acc)
    test_error = np.zeros(len(test_acc))
    for i in range(len(test_acc)):
        test_error[i]=1.0-test_acc[i]
    return test_error

#print(train_error(train_acc50_fin_qcnnRL))

#print(test_error(test_acc50_fin_qcnnRL))
tr_error = train_error(av_train_wfwf_2L)
te_error = test_error(av_test_wfwf_2L)
def gen_error(tr_error, te_error):
    generalization_error = np.subtract(te_error,tr_error)
    return generalization_error

g = gen_error(tr_error, te_error)
print(g)


plt.plot(x,tr_error, marker='o', markersize=6,color='tab:blue', label='Train error', fillstyle='none')
plt.plot(x,te_error, marker='s', markersize=6,color='orange', label='Test error', fillstyle='none')

plt.xlabel('Training set')
plt.ylabel('Error')
plt.legend()
plt.show()


print(av_train_wfwf_2L)
print(std_train_wfwf_2L)



#### QCNN with MEASUREMENT ON 1 LAST QUBIT
## 10 immagini
train_acc10_rl_QCNN_LAST_QUBIT_MEASURED = [0.9,0.7,0.9,0.8,0.9]
test_acc10_rl_QCNN_LAST_QUBIT_MEASURED = [0.7285714285714285,0.6571428571428571,0.7357142857142858,0.7357142857142858,0.75]




#### grafico RL in funzione del num layers TRAIN
nlayers = np.arange(1,4,1)
yacc = np.arange(0.5,1.1,0.1)
train_accuracy_RLRL_6data = np.array([np.mean(train_acc6_fin_RL1), np.mean(train_acc6_fin_R2L), np.mean(train_acc6_fin_RL3)])
train_accuracy_RLRL_30data = np.array([np.mean(train_acc30_fin_RL1), np.mean(train_acc30_fin_R2L), np.mean(train_acc30_fin_RL3)])
train_accuracy_RLRL_50data = np.array([np.mean(train_acc50_fin_RL1), np.mean(train_acc50_fin_R2L), np.mean(train_acc50_fin_RL3)])


plt.plot(nlayers, train_accuracy_RLRL_6data, marker='o', fillstyle='none', color='tab:orange', label='6 images', ls=':',markersize=12, linewidth=2.5)
plt.plot(nlayers, train_accuracy_RLRL_30data, marker='s', fillstyle='none', color='darkblue', label='30 images', ls=':',markersize=12, linewidth=2.5)
plt.plot(nlayers, train_accuracy_RLRL_50data, marker='v', fillstyle='none', color='magenta', label='50 images', ls=':', markersize=12, linewidth=2.5)
plt.legend(loc=4,prop={'size':14})
plt.xlabel('N° of layers', fontsize=12, fontweight='semibold')
plt.xticks(nlayers, fontsize=12, fontweight='semibold')
plt.ylabel('Value', fontsize=12, fontweight='semibold')
plt.ylim(0.5,1.)
plt.yticks(yacc)
plt.title('RLRL vs layers', fontsize=12, fontweight='semibold')
plt.show()

#### test

test_accuracy_RLRL_6data = np.array([np.mean(test_acc6_fin_RL1), np.mean(test_acc6_fin_R2L), np.mean(test_acc6_fin_RL3)])
test_accuracy_RLRL_30data = np.array([np.mean(test_acc30_fin_RL1), np.mean(test_acc30_fin_R2L), np.mean(test_acc30_fin_RL3)])
test_accuracy_RLRL_50data = np.array([np.mean(test_acc50_fin_RL1), np.mean(test_acc50_fin_R2L), np.mean(test_acc50_fin_RL3)])


plt.plot(nlayers, test_accuracy_RLRL_6data, marker='o', fillstyle='none', color='tab:orange', label='6 images', ls=':',markersize=12, linewidth=2.5)
plt.plot(nlayers, test_accuracy_RLRL_30data, marker='s', fillstyle='none', color='darkblue', label='30 images', ls=':',markersize=12, linewidth=2.5)
plt.plot(nlayers, test_accuracy_RLRL_50data, marker='v', fillstyle='none', color='magenta', label='50 images', ls=':', markersize=12, linewidth=2.5)
plt.legend(loc=4,prop={'size':14})
plt.xlabel('N° of layers', fontsize=12, fontweight='semibold')
plt.xticks(nlayers, fontsize=12, fontweight='semibold')
plt.ylabel('Value', fontsize=12, fontweight='semibold')
plt.ylim(0.5,1.)
plt.yticks(yacc)
plt.title('RLRL vs layers', fontsize=12, fontweight='semibold')
plt.show()